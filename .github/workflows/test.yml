# This GitHub action runs your tests for each commit push and/or PR. Optionally
# you can turn it on using a cron schedule for regular testing.
#
name: Tests
on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'
  # For systems with an upstream API that could drift unexpectedly (like most SaaS systems, etc.),
  # we recommend testing at a regular interval not necessarily tied to code changes. This will 
  # ensure you are alerted to something breaking due to an API change, even if the code did not
  # change.
  # schedule:
  #   - cron: '0 13 * * *'
jobs:
  # ensure the code builds...
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.3

    - name: Get dependencies
      run: |
        go mod download

    - name: Build
      run: |
        go build -v .

  # run short tests in a matrix of OSs
  test-short:
    name: Short Test
    needs: build
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.3

    - name: Get dependencies
      run: |
        go mod download

    - name: Run short tests
      timeout-minutes: 10
      run: |
        go test -v -short ./...

  # run acceptance tests in a matrix with Terraform core versions and database servers
  test-db:
    name: Terraform/Database Server Matrix Test
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        server-type:
          # TODO: move to using services instead of the built in startup
          - postgres
          - cockroach
          - mysql
          - sqlserver

        # list whatever Terraform versions here you would like to support
        terraform:
          # not testing on 0.12 due to issues with data source flapping
          # - '0.12.29'
          - '0.13.6'
          - '0.14.10'
          - '0.15.0-rc2'
    steps:

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: '1.16'
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2.3.3

    - name: Get dependencies
      run: |
        go mod download
        
    - name: Run Terraform tests
      timeout-minutes: 10
      env:
        TF_ACC_TERRAFORM_VERSION: ${{ matrix.terraform }}
      run: |
        go test -v ./internal/provider/ -server-types ${{ matrix.server-type }}